// PARTICLE EXPERIMENTS// Author : Seb Lee-Delisle// Blog : www.sebleedelisle.com// Company : www.pluginmedia.net//// This work is licensed under a Creative Commons  2.0 License.// Full details at // http://creativecommons.org/licenses/by/2.0/uk/// You may re-use this code as you wish, but a credit would be // appreciated. And I'd love to see what you do with it! // mail me : seb@sebleedelisle.compackage com.sebleedelisle{import flash.display.*;		public class Particle { 		public var xVel					:	Number; 		// the x and y velocity of the particle	public var yVel					:	Number;		public var drag					:	Number; 		// the drag factor between 0 and 1, where 1 is no drag, and 0 is max drag. 		public var fade					:	Number;		// the fade factor, works as a multiplier. 		public var shrink				:	Number;		// another multiplier that changes the size. 																	// If < 1 then the particle graphic shrinks, >1 and the particle grows. 		public var gravity				:	Number;		// the amount of gravity to add to the yVelocity every frame. If < 0 																	// then gravity goes upwards. 		public var directionRotate:	Boolean; 		// if true then the particle points in the direction it's moving		public var disabled	:	Boolean; 				// for disabling the particle so we can reuse it. 		public var clip:Sprite;								// display object for the particle		public var spriteClass:Class; 					// class for the particle image, so we can instantiate it from the library. 		public function Particle(spriteclass:Class, targetclip:DisplayObjectContainer, xpos:Number, ypos:Number)	{				// make a new particle		clip = new spriteclass();				// store the class		spriteClass = spriteclass; 				// add it to the layer		targetclip.addChild(clip); 				// set the position		setPos(xpos, ypos);				// and the default settings		initDefaults(); 	}		public function initDefaults()	{		drag = 1; 		fade = 1; 		shrink = 1; 		gravity = 0; 		directionRotate = false; 			}		public function setPos(x:Number, y:Number)	{		clip.x = x; 		clip.y = y;	}		public function setVel(xvel:Number, yvel:Number){		xVel = xvel;		yVel = yvel;	}		public function setScale(newscale:Number){		clip.scaleX = clip.scaleY = newscale;	}		public function update(){				// add the velocity to the particle's position... 		clip.x += xVel;		clip.y += yVel;				// apply drag		xVel*=drag;		yVel*=drag;				// fade out		clip.alpha = ((clip.alpha*1000)*fade)/1000;				// scale		clip.scaleX = clip.scaleY *=shrink;				// gravity		yVel+=gravity;				if(directionRotate) {						updateRotation(); 		}	}		public function restart(x:Number, y:Number)	{		initDefaults(); 		clip.visible = true; 		disabled = false; 		setPos(x,y); 	}		public function updateRotation()	{		clip.rotation = Math.atan2(yVel,xVel)*(180/Math.PI); 	}		public function disable()	{		clip.visible = false; 		disabled = true; 			}		public function destroy()	{		if(clip.parent)			clip.parent.removeChild(clip);		clip = null; 	}	}}